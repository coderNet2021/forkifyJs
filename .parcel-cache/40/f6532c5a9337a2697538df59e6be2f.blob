var _modeleJs = require('./modele.js');
var _viewsRecipeViewJs = require('./views/recipeView.js');
var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
var _viewsRecipeViewJsDefault = _parcelHelpers.interopDefault(_viewsRecipeViewJs);
var _viewsSearchViewJs = require('./views/searchView.js');
var _viewsSearchViewJsDefault = _parcelHelpers.interopDefault(_viewsSearchViewJs);
var _viewsResultsViewJs = require('./views/resultsView.js');
var _viewsResultsViewJsDefault = _parcelHelpers.interopDefault(_viewsResultsViewJs);
require('core-js/stable');
require('regenerator-runtime/runtime');
const {recip} = require('prelude-ls');
// console.log(icons);
const recipeContainer = document.querySelector('.recipe');
// https://forkify-api.herokuapp.com/v2
// /////////////////////////////////////
/*
npm init
npm  i parcel -D

npm run start
if we have errorrs : npm install sass@1.26.10
ana ma ken 3ande errors

install packages for polifilling Es6 back to es5
npm i core-js regenerator-runtime



*/
// console.log('Test!!!');
// using el destructuring
// const showReceipe = async function () {
// try {
// const res = await fetch(
// 'https://forkify-api.herokuapp.com/api/v2/recipes/5ed6604591c37cdc054bc886'
// );
// const data1 = await res.json();
// if (!res.ok) throw new Error(`${data1.message}`);
// console.log(res, data1);
// console.log(data1.data.recipe);
// console.log(data1.status);
// const { data } = data1;
// console.log(data);
// console.log(data.recipe.servings);
// } catch (error) {
// console.log(error);
// }
// };
// const showReceipe = async function () {
// try {
// const res = await fetch(
// 'https://forkify-api.herokuapp.com/api/v2/recipes/5ed6604591c37cdc054bc886'
// );
// const data = await res.json();
// if (!res.ok) throw new Error(`${data.message}`);
// console.log(res, data);
// console.log(data.data.recipe);
// console.log(data.status);
// const { status, ...data1 } = data;
// console.log('data 1', data1);
// console.log(data.data.recipe.servings);
// } catch (error) {
// console.log(error);
// }
// };
const controlRecepies = async function () {
  try {
    const id = window.location.hash.slice(1);
    // console.log(id);
    if (!id) return;
    _viewsRecipeViewJsDefault.default.renderSpinner();
    // 1 load the recipe
    await _modeleJs.loadRecipe(id);
    const {recipe} = _modeleJs.state;
    _viewsRecipeViewJsDefault.default.render(_modeleJs.state.recipe);
  } catch (error) {
    // console.error(error);
    _viewsRecipeViewJsDefault.default.renderError();
  }
};
const controlSearchResults = async function () {
  try {
    _viewsResultsViewJsDefault.default.renderSpinner();
    // 1) get search query
    const query = _viewsSearchViewJsDefault.default.GetQuery();
    if (!query) return;
    // 2) load search results
    await _modeleJs.loadSearchResults(query);
    // 3) render Results
    console.log(_modeleJs.state.search.results);
    _viewsResultsViewJsDefault.default.render();
  } catch (error) {
    console.error(error);
    _viewsRecipeViewJsDefault.default.renderError();
  }
};
// controlRecepies();
// controlSearchResults();
const init = function () {
  _viewsRecipeViewJsDefault.default.addHandlerRender(controlRecepies);
  _viewsSearchViewJsDefault.default.addHandlerSearch(controlSearchResults);
};
init();
